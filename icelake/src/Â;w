use std::collections::HashMap;

use url::Url;

use crate::IcebergResult;
use crate::iceberg::IcebergTable;
use crate::storage::IcebergStorage;

pub struct IcebergTableBuilder {
    table_uri: Url,
    storage_options: Option<HashMap<String, String>>,
}

impl IcebergTableBuilder {
    pub fn from_uri(table_uri: Url) -> Self {
        Self {
            table_uri: table_uri,
            storage_backend: None,
            storage_options: None,
        }
    }

    pub fn with_storage_options(mut self, storage_options: HashMap<String, String>) -> Self {
        self.storage_options = Some(storage_options);
        self
    }

    pub fn build_storage(self) -> IcebergResult<IcebergStorage> {
        IcebergStorage::from_url(
            self.table_uri,
            self.storage_options.unwrap_or_default()
        )
    }

    pub fn build(self) -> IcebergResult<IcebergTable> {
        Ok(IcebergTable::new(self.build_storage()?))
    }
}
